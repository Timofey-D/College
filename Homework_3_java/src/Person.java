/**
 * Реализуйте эту иерархию с помощью этих классов, дополнительных классов (если есть необходимость ) и интерфейсов.
 * Учтите что классы: Student, Instructor, Professor, Worker, StudentInstructor, ProfessorInstructor и WorkerInstructor
 * явлются конечными классами (по их типу будут созданы объекты).
 *  Все атрибуты классов должны быть private.
 *  Типы атрибутов: name – String, hours – int, course_list – String[], position – String.
 *  Постройте интерфейсы для базового класса, студентов, инструкторов,
 * преподавателей и работников.
 *  Напишите необходимые вам методы для решения задачи.
 *  Постройте массив из объектов конечных классов и напишите следующие функции:
 *  Напишите статическую функцию по имени printCourse, которая получает массив из
 * объектов и название курса. Функция должна распечатать данные всех
 * преподавателей а затем студентов этого курса.
 *  Напишите статическую функцию по имени print2MaxHoursPresent, которая
 * получает массив из объектов и распечатывает данные двух человек, которые находятся в колледже больше всего времени
 * (берутся во внимание часы учебы, работы и преподавания).
 *  Напишите статическую функцию по имени returnMaxTeachHours, которая получает массив из объектов и возвращает тот объект,
 * у которого самое большое количество часов преподавания и часов практических занятий.
*
* */
public class Person {
    // variable of instance
    private String name;

    /**
     * Constructor creates a person.
     * */
    Person(String name) {
        this.name = name;
    }

    /*
    * The method prints out
    * */
    public void printPerson() {
        System.out.printf("name: %s\n", name);
    }
}
